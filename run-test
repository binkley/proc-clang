#!/usr/bin/env bash

export PS4='+${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): } '

export LD_LIBRARY_PATH=$ICLIBHOME:$GTEST_ROOT:$LD_LIBRARY_PATH

function setup_colors()
{
    local -r ncolors=$(tput colors)
    [[ -n "$ncolors" && ncolors -ge 8 ]] || return
    readonly pgreen=$(printf "\e[32m")
    readonly pred=$(printf "\e[31m")
    readonly pboldred=$(printf "\e[31;1m")
    readonly pgrey=$(printf "\e[37m")
    readonly preset=$(printf "\e[0m")
}
[[ -t 1 ]] && setup_colors

let passed=0 failed=0 errored=0
function tally {
    local -r e=$1
    $tallied && return $e
    tallied=true
    case $e in
    0 ) let ++passed ;;
    1 ) let ++failed ;;
    * ) let ++errored ;;
    esac
    _print_result $e
    return $e
}

for t
do
    echo "${pbold}Script $t:${preset}"
    $t
    case $? in
    0 ) let ++passed ;;
    1 ) let ++failed ;;
    * ) let ++errored ;;
    esac
done

(( 0 == passed )) && ppassed="$pgrey" || ppassed="$pgreen"
(( 0 == failed )) && pfailed="$pgrey" || pfailed="$pred"
(( 0 == errored )) && perrored="$pgrey" || perrored="$pboldred"
cat <<EOS
${pbold}Summary${preset}: ${ppassed}$passed PASSED${preset}, ${pfailed}$failed FAILED${preset}, ${perrored}$errored ERRORED${preset}
EOS

if (( 0 < errored ))
then
    exit 2
elif (( 0 < failed ))
then
    exit 1
else
    exit 0
fi
